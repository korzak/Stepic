'''
Дан файл с таблицей в формате TSV с информацией о росте школьников разных классов.
Напишите программу, которая прочитает этот файл и подсчитает для каждого класса средний рост учащегося.
Файл состоит из набора строк, каждая из которых представляет собой три поля:
Класс Фамилия Рост
Класс обозначается только числом. Буквенные модификаторы не используются. Номер класса может быть от 1 до 11 включительно.
В фамилии нет пробелов, а в качестве роста используется натуральное число, но при подсчёте среднего требуется вычислить значение
в виде вещественного числа.
Выводить информацию о среднем росте следует в порядке возрастания номера класса (для классов с первого по одиннадцатый).
Если про какой-то класс нет информации, необходимо вывести напротив него прочерк, например:

Sample Input:
6	Вяххи	159
11	Федотов	172
7	Бондарев	158
6	Чайкина	153
Sample Output:
1 -
2 -
3 -
4 -
5 -
6 156.0
7 158.0
8 -
9 -
10 -
11 172.0
'''
#Внимание гавнокод!
classes = {str(i): [] for i in range(1, 12)} #создаем пустой список классов

with open("dataset_3380_5.txt", "r") as file: #Заполняем список классов из файла
    for line in file:
        s = line.strip().split()
        classes[s[0]].append(s[2])

#print(classes)

classes2 = {} #создаем список классов со средним ростом и прочерками
for i in classes:
    if classes[i] == []:
        classes2[i] = '-'
    else:
        count = 0
        sum = 0
        for j in classes[i]:
            count += 1
            sum += int(j)
        classes2[i] = sum/count
print(classes2)

#Вывод отсортированного словаря по ключу
l = classes2.keys() # получаем ключи
l = list(l)
for i in range(len(l)):
    l[i] = int(l[i])
l.sort()
for i in l: # вывод элементов словаря (ключ - значение) по алфавиту
    print(i, ' ', classes2[str(i)])

'''
#Разобрать
from collections import defaultdict as dd
from statistics import mean
with open("./sample.txt") as f:
    w = dd(lambda: [])
    for l in f:
        d = [float(it) for it in l.strip().split("\t") if it.isdigit()]
        w[int(d[0])].append(d[1])
    print(*["{} {}".format(c, mean(w[c]) if len(w[c]) else "-") for c in range(1, 12)], sep="\n")
'''